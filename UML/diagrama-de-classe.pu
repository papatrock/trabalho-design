@startuml diagrama-de-classe

class Espaco {
    - String localizacao
    - String tipo
    - String descricao
    - Int capacidade
    - Double preco
    - Fotos fotos

    + geters()
    + seters()
}

class GerenciamentoEspaco {
    + cadastrarEspaco()
    + atualizarEspaco()
    + deletarEspaco()
}

class Reserva {
    - Espaco espaco
    - Date dataInicial
    - Date dataFinal
    - Int CPFReserva

    + geters()
    + seters()

    + void reservarEspaco()
    + void cancelarReserva()
    + void verReserva()
    + void verEspacosVagos()
    + List<Espaco> EspacosFiltro()
}
note top of Reserva
    CPFReserva foregni key para Espaço
    <b>EspacosFiltro:
    func generica para "buscar por preço
    buscar por localização, tipo, etc..."
end note

interface Pagamento {

}

class PagamentoCartao extends Pagamento{

}

class PagamentoDinheiro extends Pagamento{

}

class ControlePagamento {
    + void validarPagamento()
    + void confirmarPagament()
    + void cancelarPagamento()
    + void lockReserva()
    + void unlockReserva()
}

note right of ControlePagamento
    "Verificar se  possui apenas
    sinal pago ou se já está quitada"
end note

note left of ControlePagamento #Red
    Deveria estar aqui? ou
    ligando PagamentoDinheiro e
    Pagamento cartão?
end note

note top of ControlePagamento #Red
    Fazer lock do espaço aqui
    Até confirmação do pagamento?
end note

interface Usuario {
    - nome
    - email
    - senha
    - CPF
}

class Cliente extends Usuario{

}

class Admin extends Usuario{
    # void cancelarReserva()
    # void administrarUsuarios()
}




Reserva *-- Espaco
Reserva -- ControlePagamento
PagamentoDinheiro .. Cliente
PagamentoCartao .. Cliente

ControlePagamento .. Pagamento

Espaco <.. GerenciamentoEspaco :gerencia
Admin ..> GerenciamentoEspaco :administra


Reserva "0..1".."1" Cliente
@enduml